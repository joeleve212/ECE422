// Program for Project 1
//
// Joe Leveille
// Preston Smith
// 1/13/2020 v1
// for ECE-422
//-------------------

#include <msp430.h> 
#include <stdlib.h>
#define STOP_WATCHDOG 0x5A80 // Stop the watchdog timer
#define ACLK 0x0100 // Timer ACLK source
#define UP 0x0010 // Timer UP mode
#define ENABLE_PINS 0xFFFE // Required to use inputs and outputs

int main(void) {
	WDTCTL = WDTPW + WDTHOLD; 				// Stop watchdog timer
	PM5CTL0 = ENABLE_PINS; 				// Enable inputs and outputs

	P1DIR = P1DIR | BIT0; 					// P1.0 (Red LED) will be an output
	P1OUT = P1OUT & ~BIT0; 					// Turn OFF P1.0 (Red LED)

	P9DIR = P9DIR | BIT7; 					// P1.0 (Red LED) will be an output
	P9OUT = P9OUT & ~BIT7; 					// Turn OFF P1.0 (Red LED)

	P1DIR = P1DIR & ~BIT1; 				// P1.1 (Button S1) will be an input
	P1REN = P1REN | BIT1;					// P1.1 will have a pull-up
	P1OUT = P1OUT | BIT1; 					// resistor.

	P1DIR = P1DIR & ~BIT2; 				// P1.2 (Button S1) will be an input
	P1REN = P1REN | BIT2;					// P1.2 will have a pull-up
	P1OUT = P1OUT | BIT2; 					// resistor.

	P1DIR = P1DIR & ~BIT3; 				// P1.3 (Button S1) will be an input
	P1REN = P1REN | BIT3;					// P1.3 will have a pull-up
	P1OUT = P1OUT | BIT3; 					// resistor.

	P1IE = BIT2; 							// Enable interrupt ONLY for P1.2
	P1IES = BIT2; 							// for transitions from HI-->LO
	P1IE |= BIT1; 							// Enable interrupt ONLY for P1.1
	P1IES |= BIT1; 							// for transitions from HI-->LO
	P1IFG = 0x00; 							// Ensure no ISRs are pending





	
	_BIS_SR(LPM0_bits | GIE); // Enter Low Power Mode 0 and activate interrupts
	while(1);
}


#pragma vector=PORT1_VECTOR
__interrupt void buttonPressed(void){
	//check which button
	//debounce?
	//Do thing
	P1OUT = P1OUT ^ 0x01; //toggle red LED
	P1IFG = P1IFG & (~BIT3);
	P1IFG = P1IFG & (~BIT2);
	P1IFG = P1IFG & (~BIT1);
}
